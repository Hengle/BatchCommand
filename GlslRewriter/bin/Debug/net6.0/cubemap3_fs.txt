#version 460
#pragma optionNV(fastmath off)
#extension GL_ARB_separate_shader_objects : enable
layout(location = 0) in vec4 in_attr0;
layout(location = 0) out vec4 frag_color0;
layout(location = 1) out vec4 frag_color1;
layout(location = 2) out vec4 frag_color2;
layout(location = 3) out vec4 frag_color3;
layout(location = 4) out vec4 frag_color4;
layout(location = 5) out vec4 frag_color5;
layout(location = 6) out vec4 frag_color6;
layout(location = 7) out vec4 frag_color7;
layout(std140, binding = 0) uniform fs_cbuf_4 { uvec4 fs_cbuf4[4096]; };
layout(std140, binding = 1) uniform fs_cbuf_5 { uvec4 fs_cbuf5[4096]; };
layout(binding = 0) uniform sampler2D tex0;
layout(binding = 1) uniform sampler2D tex1;
#define ftoi floatBitsToInt
#define ftou floatBitsToUint
#define itof intBitsToFloat
#define utof uintBitsToFloat

void main()
{
	// 1065353216 = 1.00f;
	// fs_cbuf4[1] = vec4(-0.5912017, -0.5431128, -0.5962458, 0.00);
	// fs_cbuf4[2] = vec4(-0.5912017, -0.5431128, -0.5962458, 0.00);
	// fs_cbuf5[8] = vec4(0.078125, 0.00, 0.00, 0.00);
	// fs_cbuf5[9] = vec4(0.078125, 0.00, 0.00, 0.00);
	// fs_cbuf5[16] = vec4(0.00, 0.00, 0.00, 3.60);
	// fs_cbuf5[17] = vec4(1.512, 2.2104, 2.075901, 0.00);
	// fs_cbuf5[18] = vec4(0.00, 0.00, 0.00, 1.00);
	// fs_cbuf5[19] = vec4(0.00, 0.00, 0.00, 1.00);

	vec4 f4_0_0;
	vec4 f4_0_1;
	vec4 f4_0_2;
	precise float pf_1_1;
	precise float pf_1_2;
	precise float pf_1_6;
	precise float pf_10_4;
	precise float pf_12_0;
	precise float pf_13_0;
	precise float pf_14_0;
	precise float pf_15_0;
	precise float pf_16_0;
	precise float pf_4_1;
	precise float pf_4_2;
	precise float pf_4_6;
	precise float pf_4_8;
	precise float pf_6_9;
	precise float pf_8_4;
	// vec4(0.50,0.50,0.50,0.75)  <=>  texture({tex1 : tex1}, vec2({in_attr0.x : 0.00}, {in_attr0.y : 0.00}))
	f4_0_0 = texture(tex1, vec2(in_attr0.x, in_attr0.y));
	// -0.5671573  <=>  (({f4_0_0.y : 0.50} * {utof(fs_cbuf4[1].y) : -0.5431128}) + ({f4_0_0.x : 0.50} * {utof(fs_cbuf4[1].x) : -0.5912017}))
	pf_1_1 = ((f4_0_0.y * utof(fs_cbuf4[1].y)) + (f4_0_0.x * utof(fs_cbuf4[1].x)));
	// -0.5671573  <=>  (({f4_0_0.y : 0.50} * {utof(fs_cbuf4[2].y) : -0.5431128}) + ({f4_0_0.x : 0.50} * {utof(fs_cbuf4[2].x) : -0.5912017}))
	pf_4_1 = ((f4_0_0.y * utof(fs_cbuf4[2].y)) + (f4_0_0.x * utof(fs_cbuf4[2].x)));
	// -0.2690344  <=>  (({f4_0_0.z : 0.50} * (0.f - {utof(fs_cbuf4[2].z) : -0.5962458})) + {pf_4_1 : -0.5671573})
	pf_4_2 = ((f4_0_0.z * (0.f - utof(fs_cbuf4[2].z))) + pf_4_1);
	// -0.2690344  <=>  (({f4_0_0.z : 0.50} * (0.f - {utof(fs_cbuf4[1].z) : -0.5962458})) + {pf_1_1 : -0.5671573})
	pf_1_2 = ((f4_0_0.z * (0.f - utof(fs_cbuf4[1].z))) + pf_1_1);
	// vec4(0.50,0.50,0.50,0.75)  <=>  texture({tex0 : tex0}, vec2((({pf_1_2 : -0.2690344} * -0.5f) + 0.5f), {utof(fs_cbuf5[8].x) : 0.078125}))
	f4_0_1 = texture(tex0, vec2(((pf_1_2 * -0.5f) + 0.5f), utof(fs_cbuf5[8].x)));
	// vec4(0.50,0.50,0.50,0.75)  <=>  texture({tex0 : tex0}, vec2((({pf_4_2 : -0.2690344} * -0.5f) + 0.5f), {utof(fs_cbuf5[9].x) : 0.078125}))
	f4_0_2 = texture(tex0, vec2(((pf_4_2 * -0.5f) + 0.5f), utof(fs_cbuf5[9].x)));
	// 2.2104  <=>  ((0.f - {utof(fs_cbuf5[16].y) : 0.00}) + {utof(fs_cbuf5[17].y) : 2.2104})
	pf_12_0 = ((0.f - utof(fs_cbuf5[16].y)) + utof(fs_cbuf5[17].y));
	// -0.2690344  <=>  (({f4_0_0.z : 0.50} * (0.f - {utof(fs_cbuf4[1].z) : -0.5962458})) + {pf_1_1 : -0.5671573})
	pf_1_6 = ((f4_0_0.z * (0.f - utof(fs_cbuf4[1].z))) + pf_1_1);
	// -0.2690344  <=>  (({f4_0_0.z : 0.50} * (0.f - {utof(fs_cbuf4[2].z) : -0.5962458})) + {pf_4_1 : -0.5671573})
	pf_4_6 = ((f4_0_0.z * (0.f - utof(fs_cbuf4[2].z))) + pf_4_1);
	// 0.00  <=>  ((0.f - {utof(fs_cbuf5[18].y) : 0.00}) + {utof(fs_cbuf5[19].y) : 0.00})
	pf_13_0 = ((0.f - utof(fs_cbuf5[18].y)) + utof(fs_cbuf5[19].y));
	// 0.00  <=>  ({utof(fs_cbuf5[19].x) : 0.00} + (0.f - {utof(fs_cbuf5[18].x) : 0.00}))
	pf_14_0 = (utof(fs_cbuf5[19].x) + (0.f - utof(fs_cbuf5[18].x)));
	// 0.00  <=>  ((0.f - {utof(fs_cbuf5[18].z) : 0.00}) + {utof(fs_cbuf5[19].z) : 0.00})
	pf_15_0 = ((0.f - utof(fs_cbuf5[18].z)) + utof(fs_cbuf5[19].z));
	// 1.512  <=>  ({utof(fs_cbuf5[17].x) : 1.512} + (0.f - {utof(fs_cbuf5[16].x) : 0.00}))
	pf_4_8 = (utof(fs_cbuf5[17].x) + (0.f - utof(fs_cbuf5[16].x)));
	// 2.075901  <=>  ((0.f - {utof(fs_cbuf5[16].z) : 0.00}) + {utof(fs_cbuf5[17].z) : 2.075901})
	pf_16_0 = ((0.f - utof(fs_cbuf5[16].z)) + utof(fs_cbuf5[17].z));
	// 1.1052  <=>  ((({pf_13_0 : 0.00} * {f4_0_2.x : 0.50}) + {utof(fs_cbuf5[18].y) : 0.00}) + (({pf_12_0 : 2.2104} * {f4_0_1.x : 0.50}) + {utof(fs_cbuf5[16].y) : 0.00}))
	pf_6_9 = (((pf_13_0 * f4_0_2.x) + utof(fs_cbuf5[18].y)) + ((pf_12_0 * f4_0_1.x) + utof(fs_cbuf5[16].y)));
	// 0.756  <=>  ((({pf_14_0 : 0.00} * {f4_0_2.x : 0.50}) + {utof(fs_cbuf5[18].x) : 0.00}) + (({pf_4_8 : 1.512} * {f4_0_1.x : 0.50}) + {utof(fs_cbuf5[16].x) : 0.00}))
	pf_8_4 = (((pf_14_0 * f4_0_2.x) + utof(fs_cbuf5[18].x)) + ((pf_4_8 * f4_0_1.x) + utof(fs_cbuf5[16].x)));
	// 1.03795  <=>  ((({pf_15_0 : 0.00} * {f4_0_2.x : 0.50}) + {utof(fs_cbuf5[18].z) : 0.00}) + (({pf_16_0 : 2.075901} * {f4_0_1.x : 0.50}) + {utof(fs_cbuf5[16].z) : 0.00}))
	pf_10_4 = (((pf_15_0 * f4_0_2.x) + utof(fs_cbuf5[18].z)) + ((pf_16_0 * f4_0_1.x) + utof(fs_cbuf5[16].z)));
	// 0.756  <=>  {pf_8_4 : 0.756}
	frag_color0.x = pf_8_4;
	// 1.1052  <=>  {pf_6_9 : 1.1052}
	frag_color0.y = pf_6_9;
	// 1.03795  <=>  {pf_10_4 : 1.03795}
	frag_color0.z = pf_10_4;
	// 1.269034  <=>  ((({pf_4_6 : -0.2690344} * -0.5f) + 0.5f) + (({pf_1_6 : -0.2690344} * -0.5f) + 0.5f))
	frag_color0.w = (((pf_4_6 * -0.5f) + 0.5f) + ((pf_1_6 * -0.5f) + 0.5f));
	return;
}
