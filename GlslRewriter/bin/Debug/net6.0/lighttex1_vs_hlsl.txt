#version 460
#pragma optionNV(fastmath off)
#extension GL_ARB_separate_shader_objects : enable
out gl_PerVertex { float4 o.vertex; };
layout(location = 0) in float4 v.vertex;
layout(location = 0) out float4 o.fs_attr0;
layout(location = 1) out float4 o.fs_attr1;
layout(location = 2) out float4 o.fs_attr2;
layout(std140, binding = 0) uniform vs_cbuf_3 { uint4 vs_cbuf3[4096]; };
layout(std140, binding = 1) uniform vs_cbuf_4 { uint4 vs_cbuf4[4096]; };
#define ftoi floatBitsToInt
#define ftou floatBitsToUint
#define itof intBitsToFloat
#define utof uintBitsToFloat

void main()
{
	// 1065353216 = 1.00f;
	// vs_cbuf3[2] = float4(256.00, 256.00, 0.0039063, 0.0039063);
	// vs_cbuf3[8] = float4(6360.00, 6420.00, 0, 0);
	// vs_cbuf4[3] = float4(18.00, 16.58824, 15.30, 0.0021038);
	// vs_cbuf4[7] = float4(0, 0, 0, 0);

	bool b_1_1;
	float f_0_2;
	precise float pf_0_0;
	precise float pf_0_1;
	precise float pf_0_4;
	uint u_0_1;
	uint u_0_2;
	uint u_0_3;
	uint u_0_phi_2;
	uint u_1_0;
	uint u_1_1;
	uint u_1_phi_1;
	uint u_2_0;
	// -1  <=>  float(-1.00)
	o.vertex.x = float(-1.00);
	// 1.00  <=>  float(1.00)
	o.vertex.y = float(1.00);
	// 0  <=>  float(0.00)
	o.vertex.z = float(0.00);
	// 1.00  <=>  float(1.00)
	o.vertex.w = float(1.00);
	// 6360.126  <=>  float(6360.12646)
	o.fs_attr0.x = float(6360.12646);
	// 0  <=>  float(0.00)
	o.fs_attr0.y = float(0.00);
	// 0  <=>  float(0.00)
	o.fs_attr0.z = float(0.00);
	// 1.00  <=>  float(1.00)
	o.fs_attr0.w = float(1.00);
	// -0.00631  <=>  float(-0.00631)
	o.fs_attr1.x = float(-0.00631);
	// 0  <=>  float(0.00)
	o.fs_attr1.y = float(0.00);
	// 0  <=>  float(0.00)
	o.fs_attr1.z = float(0.00);
	// 1.00  <=>  float(1.00)
	o.fs_attr1.w = float(1.00);
	// -0.0024  <=>  float(-0.0024)
	o.fs_attr2.x = float(-0.0024);
	// 0  <=>  float(0.00)
	o.fs_attr2.y = float(0.00);
	// 0  <=>  float(0.00)
	o.fs_attr2.z = float(0.00);
	// 1.00  <=>  float(1.00)
	o.fs_attr2.w = float(1.00);
	// 60.00  <=>  ((0.f - {(vs_cbuf3_8.x) : 6360.00}) + {(vs_cbuf3_8.y) : 6420.00})
	pf_0_0 = ((0.f - (vs_cbuf3_8.x)) + (vs_cbuf3_8.y));
	// 6360.126  <=>  (({pf_0_0 : 60.00} * clamp({(vs_cbuf4_3.w) : 0.0021038}, 0.0001f, 0.9999f)) + {(vs_cbuf3_8.x) : 6360.00})
	pf_0_1 = ((pf_0_0 * clamp((vs_cbuf4_3.w), 0.0001f, 0.9999f)) + (vs_cbuf3_8.x));
	// 6360.126  <=>  {pf_0_1 : 6360.126}
	o.fs_attr0.x = pf_0_1;
	// -1  <=>  ({v.vertex.x : -0.5} * 2.f)
	o.vertex.x = (v.vertex.x * 2.f);
	// 1065352882  <=>  {ftou(((1.0f / {pf_0_1 : 6360.126}) * {(vs_cbuf3_8.x) : 6360.00})) : 1065352882}
	u_0_1 = ftou(((1.0f / pf_0_1) * (vs_cbuf3_8.x)));
	// 1.00  <=>  ({v.vertex.y : 0.50} * 2.f)
	o.vertex.y = (v.vertex.y * 2.f);
	// -0.9999801  <=>  (0.f - ((1.0f / {pf_0_1 : 6360.126}) * {(vs_cbuf3_8.x) : 6360.00}))
	f_0_2 = (0.f - ((1.0f / pf_0_1) * (vs_cbuf3_8.x)));
	// 0.0000398  <=>  ((((1.0f / {pf_0_1 : 6360.126}) * {(vs_cbuf3_8.x) : 6360.00}) * {f_0_2 : -0.9999801}) + 1.f)
	pf_0_4 = ((((1.0f / pf_0_1) * (vs_cbuf3_8.x)) * f_0_2) + 1.f);
	// 1065352882  <=>  {u_0_1 : 1065352882}
	u_1_0 = u_0_1;
	u_1_phi_1 = u_1_0;
	// False  <=>  if(((0u != ftou({vs_cbuf4_7.y : 0})) ? true : false))
	if(((0u != ftou(vs_cbuf4_7.y)) ? true : false))
	{
		// 3212836864  <=>  3212836864u
		u_1_1 = 3212836864u;
		u_1_phi_1 = u_1_1;
	}
	// True  <=>  ((! (0u != ftou({vs_cbuf4_7.y : 0}))) ? true : false)
	b_1_1 = ((! (0u != ftou(vs_cbuf4_7.y))) ? true : false);
	// 1065352882  <=>  {u_1_phi_1 : 1065352882}
	u_0_2 = u_1_phi_1;
	u_0_phi_2 = u_0_2;
	// True  <=>  if({b_1_1 : True})
	if(b_1_1)
	{
		// 3139274396  <=>  {ftou(((0.f - sqrt(clamp({pf_0_4 : 0.0000398}, 0.0, 1.0))) + {(vs_cbuf3_2.w) : 0.0039063})) : 3139274396}
		u_2_0 = ftou(((0.f - sqrt(clamp(pf_0_4, 0.0, 1.0))) + (vs_cbuf3_2.w)));
		// 3139274396  <=>  {u_2_0 : 3139274396}
		u_0_3 = u_2_0;
		u_0_phi_2 = u_0_3;
	}
	// -0.006309953  <=>  (0.f - sqrt(clamp({pf_0_4 : 0.0000398}, 0.0, 1.0)))
	o.fs_attr1.x = (0.f - sqrt(clamp(pf_0_4, 0.0, 1.0)));
	// -0.0024036532  <=>  {utof(u_0_phi_2) : -0.0024036532}
	o.fs_attr2.x = utof(u_0_phi_2);
	return o;
}
